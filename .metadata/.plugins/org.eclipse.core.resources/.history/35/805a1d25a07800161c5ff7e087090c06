package leet;

import java.util.ArrayList;
import java.util.Collections;

public class LongestPalindrome {
	public boolean isPalindrome(String s)
	{
		int i=0;
		int j=s.length()-1;
		char a[]=s.toCharArray();
		while(i<j)
		{
		if(a[i]!=a[j])
		{
			return false;
		}
		else{
			i++;
			j--;
		}
		}
		
		return true;
	}
	public String longestPalindrome(String s)
	{
		int i=0;
		int j=s.length()-1;
		Boolean b;
		ArrayList<String> l=new ArrayList<String>(); 
		for( i=0;i<s.length();i++)
		{
			for(j=s.length()-1;j>=i;j--)
			{
			b=isPalindrome(s.substring(i, j));
			if(b==true)
			{
			 	l.add(s.substring(i, j));
			}
			
			}
		}
		Collections.sort(l);
		for(String a:l)
		System.out.println(a);
		return null;
	}
	public static void main(String[] args)
	{
		LongestPalindrome lp=new LongestPalindrome();
		Boolean b=lp.isPalindrome("asasa");
		String a=lp.longestPalindrome("asasa");
		System.out.println(b);
		
	}

}
