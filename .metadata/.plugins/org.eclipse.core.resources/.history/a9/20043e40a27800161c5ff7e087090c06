package leet;

import java.util.ArrayList;
import java.util.Collections;

public class LongestPalindrome {
	public boolean isPalindrome(String s)
	{
		int i=0;
		int j=s.length()-1;
		char a[]=s.toCharArray();
		while(i<j)
		{
		if(a[i]!=a[j])
		{
			return false;
		}
		else{
			i++;
			j--;
		}
		}
		
		return true;
	}
	public String longestPalindrome(String s)
	{
		if(s.length()<2)
		{
			return s
		}
		int i=0;
		int j=s.length()-1;
		Boolean b;
		ArrayList<String> l=new ArrayList<String>(); 
		for( i=0;i<s.length();i++)
		{
			for(j=s.length()-1;j>=i;j--)
			{
			b=isPalindrome(s.substring(i, j));
			if(b==true)
			{
			 	l.add(s.substring(i, j));
			}
			
			}
		}
		Collections.sort(l);
		for(int a=0;a<l.size();a++)
		{
		 for(int c=a+1;c<l.size();c++)
		 {
			 if(l.get(a).length()>l.get(c).length())
			 {
				swap(a,c,l); 
			 }
		 }
		}
		for(String x:l)
		{
			System.out.println(x);
		}
	
		return l.get(l.size()-1);
	}
	
		
		
	private void swap(int a, int c, ArrayList<String> l) {
	  String temp=l.get(a);
	  l.set(c, l.get(a));
	  l.set(a, temp);
		
	}




	public static void main(String[] args)
	{
		LongestPalindrome lp=new LongestPalindrome();
		Boolean b=lp.isPalindrome("asasa");
		String a=lp.longestPalindrome("a");
		System.out.println(a);
		
	}

}
